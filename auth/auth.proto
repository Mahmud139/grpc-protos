syntax = "proto3";

package auth;

option go_package = "/auth";

//Authentication Service
service AuthService {
    // Register a new user (either Student or Teacher)
    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

    // Verify whether the email exists
    rpc VerifyEmailExists(VerifyEmailExistsRequest) returns (VerifyEmailExistsResponse);

    // Resend Email Verificaiton Email
    rpc ResendEmailVerificationEmail(ResendEmailVerificationEmailRequest) returns (ResendEmailVerificationEmailResponse);

    // Verify Token for email confirmation
    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse);

    // Login and receive JWT tokens
    rpc Login(LoginRequest) returns (LoginResponse);

    // Refresh JWT token
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

    // Forgot Password
    rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse);

    // Check Reset Password Token
    rpc VerifyResetPasswordToken(VerifyResetPasswordTokenRequest) returns (VerifyResetPasswordTokenResponse);

    // Reset Password
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
}

// Enum for User Type
enum UserType {
    UNKNOWN = 0;
    TEACHER = 1;
    STUDENT = 2;
}

// Teacher-specific fields
message Teacher {
    string name = 1;
    string email = 2;
    string institution = 3;
    string major = 4;
    string teacher_id = 5;
    string country = 6;
    string password = 7;
}

// Student-specific fields
message Student {
    string name = 1;
    string email = 2;
    string institution = 3;
    string major = 4;
    string student_id = 5;
    string grade = 6;
    string country = 7;
    string password = 8;
}

// User Registration Request
message RegisterUserRequest {
    UserType user_type = 1; // Type of user (Teacher or Student)
    oneof user {
        Teacher teacher = 2; // Teacher details
        Student student = 3; // Student details
    }
    string ip_address = 4;
    string user_agent = 5;
    string geo_location = 6;
}

// User Registration Response
message RegisterUserResponse {
    bool success = 1;
    string uid = 2;
}

// Email Verification Request
message VerifyEmailExistsRequest {
    string email = 1;
}

// Email Verification Response
message VerifyEmailExistsResponse {
    bool exists = 1;
}

// Send OTP Request
message ResendEmailVerificationEmailRequest {
    string token = 1;
    string ip_address = 2;
    string user_agent = 3;
    string geo_location = 4;
}

// Send OTP Response
message ResendEmailVerificationEmailResponse {
    bool success = 1;
    string message = 2;
}

// OTP Verification Request
message VerifyEmailRequest {
    string token = 1;
}

// OTP Verification Response
message VerifyEmailResponse {
    bool success = 1;
    string message = 2;
}

// Login Request
message LoginRequest {
    string email = 1;
    string password = 2;
    string ip_address = 3;
    string user_agent = 4;
    string geo_location = 5;
}

// Login Response
message LoginResponse {
    bool success = 1;
    string access_token = 2; // JWT Access Token
    string refresh_token = 3; // JWT Refresh Token
    string message = 4;
}

// Refresh JWT Token Request
message RefreshTokenRequest {
    string uid = 1;
    string refresh_token = 2;
}

// Refresh JWT Token Response
message RefreshTokenResponse {
    bool success = 1;
    string access_token = 2;
    string refresh_token = 3;
}

// Forgot Password Request
message ForgotPasswordRequest {
    string email = 1;
}

// Forgot Password Response
message ForgotPasswordResponse {
    bool success = 1;
    string message = 2;
}

message VerifyResetPasswordTokenRequest {
    string token = 1;
}

message VerifyResetPasswordTokenResponse {
    bool success = 1;
}

// Reset Password Request
message ResetPasswordRequest {
    string token = 1;
    string new_password = 2;
}

// Reset Password Response
message ResetPasswordResponse {
    bool success = 1;
}
